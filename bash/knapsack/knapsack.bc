#!/usr/bin/env bc -lq
#
# Knapsack problem solution
#
define max_value(capacity,start){
    auto value, weight, i, max;
    max = 0;
    for (i = start; i < items; ++i) {
        weight = capacity - weights[i];
        if (weight < 0) value = 0 else value = values[i] + max_value(weight, i + 1);
        if (value > max) max = value;
    }
    return max;
}

capacity = read()
i = items = read()

while(i--) {
    weights[i] = read()
    values[i] = read()
}

max_value(capacity, 0)
