#!/usr/bin/env bc -lq
#
# Copyright (c) 2023 Jegors Cemisovs
# License: Apache-2.0 license
#
# Knapsack problem solution
#
define max_value(capacity,start){
    auto value, weight, i, max;
    max = 0;
    for (i = start; i < length(weights); ++i) {
        weight = capacity - weights[i];
        if (weight < 0) value = 0 else value = values[i] + max_value(weight, i + 1);
        if (value > max) max = value;
    }
    return max;
}

capacity = read();
items = read();
#print "-->", capacity, "--", items

while(items--) {
    weights[items] = read();
    values[items] = read();
    # print items, " -> ", weights[items], " ", values[items], "<--"
}

max_value(capacity, 0);
